[tox]
envlist =
    cleanup,
    py{39,310}-dj{32,40}-laboratory{10}

[gh-actions]
# See https://pypi.org/project/tox-gh-actions/
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
description = run the test suite
usedevelop = true
passenv=
    CI
    COVERAGE_ARGS
    DB_BACKEND
    DB_NAME
    DB_USER
    DB_PASSWORD
    DB_HOST
    DB_PORT
    GITHUB_*
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONWARNINGS=once
    PYTHONPATH={toxinidir}/demo
    DB_NAME = {env:DB_NAME:studies}
    DB_USER = {env:DB_USER:studies}
    DB_HOST = {env:DB_HOST:localhost}
    DB_PASSWORD =  {env:DB_PASSWORD:studies}
deps =
    dj32: Django>=3.1,<3.2
    dj40: Django>=4.0,<4.1
    laboratory10: laboratory>=1.0,<1.1
# bash is used to create the codecov flags from the envname,
# only when codecov is used in the envname
whitelist_externals =
    /bin/bash
    /usr/bin/bash
commands =
    coverage run -m pytest {posargs}
extras =
    test


[testenv:cleanup]
description = remove coverage files
deps =
    coverage
commands =
    coverage erase


[testenv:coverage]
description = combine coverage files and generate the report
deps =
    coverage
commands =
    coverage combine
    coverage report {posargs}


[testenv:lint]
description = run the linters
extras =
    lint
commands =
    flake8
    isort . --check
    black --check .


[testenv:changelog]
description = build the changelog
basepython = python3
deps =
    towncrier==18.6.0
skip_install = true
commands =
    python -V
    towncrier {posargs}

[testenv:manifest]
basepython = python3
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:release]
description = build the changelog, bump the package version, commit and tag
basepython=python2.7
skip_install = true
whitelist_externals =
    git
    tox
passenv =
    HOME
deps =
    bumpversion==0.5.3
commands_pre =
    tox -e changelog -- --yes
    git commit -m "Build changelog"
    bumpversion {posargs:minor}
commands =
    git push origin
    git push origin --tags

[testenv:serve]
description = run the development server
usedevelop = true
changedir = {toxinidir}/demo
setenv =
    DJANGO_SETTINGS_MODULE=demo.settings.dev
extras =
    dev
commands =
    python manage.py runserver {posargs}


[testenv:deploy]
description = build the package and deploy it to PyPI.org
basepython = python3
isolated_build = True
skip_install = true
setenv =
    PYTHONPATH = {toxinidir}
requires =
    setuptools>=42.0.2
    wheel>=0.33.6
deps =
    twine>=3.1.1
commands_pre =
    python setup.py sdist bdist_wheel
commands =
    twine upload {posargs} --skip-existing dist/*
